name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  DEVELOPER_DIR: /Applications/Xcode.app
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  release:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Verify Version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          PLUGIN_VERSION=$(./gradlew -q getVersion)
          if [[ $PLUGIN_VERSION = $VERSION ]]; then exit 0 ; else exit 1; fi

      - name: Get Release Notes
        id: get_release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          NOTES="$(awk "/## Version $VERSION/{flag=1;next}/## Version/{flag=0}flag" CHANGELOG.md)"
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo ::set-output name=NOTES::"$NOTES"

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@daadedc81d5f9d3c06d2c92f49202a3cc2b919ba # v0.2.1
        with:
          version: '351.0.0'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set up .NET 6.0
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Restore workloads
        run: |
          dotnet workload install android ios maui-android maui-ios maui-maccatalyst

      - name: Install doc dependencies
        run: |
          brew install doxygen
          brew install graphviz

      - name: Build
        run: ./gradlew build pack packageDocs

      - name: Publish Nuget
        env:
          NUGET_PRODUCTION_API_KEY: ${{ secrets.NUGET_PRODUCTION_API_KEY }}
        run: ./gradlew publishToProduction

      - name: Upload Docs
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          gsutil cp docs/build/$VERSION.tar.gz gs://ua-web-ci-prod-docs-transfer/libraries/xamarin/$VERSION.tar.gz

      - name: Create Github Release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.get_release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
