name: CI

on: [pull_request]

jobs:
  release:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Verify Version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          PLUGIN_VERSION=$(./gradlew -q getVersion)
          if [[ $PLUGIN_VERSION = $VERSION ]]; then exit 0 ; else exit 1; fi

      - name: Get Release Notes
        id: get_release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          NOTES="$(awk "/## Version $VERSION/{flag=1;next}/## Version/{flag=0}flag" CHANGELOG.md)"
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo ::set-output name=NOTES::"$NOTES"

      - name: Setup GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "270.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install dependencies
        run: |
          brew install doxygen
          brew install graphviz

      - name: Create google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo "$GOOGLE_SERVICES_JSON" > samples/android/Assets/google-services.json

      - name: Build
        run: ./gradlew build pkg

      - name: Publish Nuget
        run: ./gradlew publishToProduction

      - name: Upload Docs
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          gsutil cp docs/build/$VERSION.tar.gz gs://ua-web-ci-prod-docs-transfer/libraries/xamarin/$VERSION.tar.gz

      - name: Create Github Release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.get_release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
