task clean(type: Delete) {
    doLast() {
        project.delete "bin"
        project.delete "obj"
        project.delete "SampleContentExtension/bin"
        project.delete "SampleContentExtension/obj"
        project.delete "SampleServiceExtension/bin"
        project.delete "SampleServiceExtension/obj"
    }
}

task build {
    def BuildConfiguration=project.properties['build_configuration'] ?: "Release"
    doLast() {
        exec {
            commandLine "mono", "$nugetExe", "restore"
        }

        exec {
            commandLine "${msbuild}", "/t:build", "/property:Configuration=${BuildConfiguration}", "iOSSample.sln"
        }
    }
}

build.dependsOn(':src:AirshipBindings.iOS.Core:build',
    ':src:AirshipBindings.iOS.Automation:build',
    ':src:AirshipBindings.iOS.ExtendedActions:build',
    ':src:AirshipBindings.iOS.MessageCenter:build',
    ':src:AirshipBindings.iOS.Location:build',
    ':src:AirshipBindings.iOS.NotificationContentExtension:build',
    ':src:AirshipBindings.iOS.NotificationServiceExtension:build')

