
def updateCsproj() {
    def csprojFile = "$projectDir/AirshipBindings.Android.csproj"

    def fileName = ""
    new File("$projectDir/Jars").eachFileRecurse {
        fileName += it.name
    }

    ant.replaceregexp(file: csprojFile, match: 'urbanairship-sdk-.*aar', replace: fileName)
}

task syncVersion {
    outputs.upToDateWhen { false }

    // Remove existing aar files
    delete fileTree("$projectDir/Jars") {
        include '*.aar'
    }

    // Download aar
    def filename = "urbanairship-sdk-${airshipProperties.androidVersion}.aar"
    def path = new File("$projectDir/Jars/$filename")
    def url = new URL("http://central.maven.org/maven2/com/urbanairship/android/urbanairship-sdk/${airshipProperties.androidVersion}/$filename")
    HttpURLConnection huc = (HttpURLConnection) url.openConnection()
    huc.setRequestMethod("GET")
    huc.connect();
    if (huc.getResponseCode() / 100 != 2) {
        println("Issue downloading version ${airshipProperties.androidVersion}. Maintaining previous version.")
    } else {
        url.withInputStream{
            i -> path.withOutputStream{ it << i }
        }
        // Edit the csproj file to reflect this update
        updateCsproj()
    }
}

task clean << {
    delete "bin"
    delete "obj"
}

task build << {
    def argv = ["${nugetExe}", "restore", "AirshipBindings.Android.sln"]
    exec {
        executable "mono"
        args argv
    }

    argv = ["build", "-c:Release", "AirshipBindings.Android.sln"]
    exec {
        executable "${mdTool}"
        args argv
    }
}

build.dependsOn('syncVersion')
