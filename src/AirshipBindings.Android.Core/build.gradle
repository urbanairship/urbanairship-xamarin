def updateCsproj() {
    def csprojFile = "$projectDir/AirshipBindings.Android.Core.csproj"

    def fileName = ""
    new File("$projectDir/Jars").eachFileRecurse {
        fileName += it.name
    }

    ant.replaceregexp(file: csprojFile, match: 'urbanairship-core-.*aar', replace: fileName)
}

task syncVersion  {
    doLast() {
        def filename = "urbanairship-core-${airshipProperties.androidVersion}.aar"
        def jarDirectory = new File("$projectDir/Jars")
        if ( jarDirectory.exists() ) {
            // Remove aar files that aren't the correct version
            project.delete fileTree("$projectDir/Jars") {
                include '*.aar'
                exclude filename
            }
        } else {
            // create Jars directory
            jarDirectory.mkdirs()
        }

        def path = new File("$projectDir/Jars/$filename")
        if ( !path.exists() ) {
           // Download aar
            def url = new URL("https://bintray.com/urbanairship/android/download_file?file_path=com%2Furbanairship%2Fandroid%2Furbanairship-core%2F${airshipProperties.androidVersion}%2F$filename")
            HttpURLConnection huc = (HttpURLConnection) url.openConnection()
            huc.setRequestMethod("GET")
            huc.connect();
            if (huc.getResponseCode() / 100 != 2) {
                println("Issue downloading version ${airshipProperties.androidVersion}. Maintaining previous version.")
            } else {
                url.withInputStream{
                    i -> path.withOutputStream{ it << i }
                }
                // Edit the csproj file to reflect this update
                updateCsproj()
            }
        }
    }
}

task clean {
    doLast() {
        project.delete "bin"
        project.delete "obj"
        project.delete "$buildDir"
        project.delete "Jars"
    }
}

task build {
    def BuildConfiguration=project.properties['build_configuration'] ?: "Release"
    doLast() {
        exec {
            commandLine "mono", "$nugetExe", "restore", "AirshipBindings.Android.Core.sln"
        }

        exec {
            commandLine "${msbuild}", "/t:build", "/p:Configuration=${BuildConfiguration}", "AirshipBindings.Android.Core.sln"
        }
    }
}

build.dependsOn('syncVersion')
