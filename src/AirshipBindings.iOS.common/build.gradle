ext {
    pod = 'UrbanAirship-iOS-SDK'
}

task clean(type: Delete) {
    doLast() {
        project.delete fileTree("$rootDir/frameworks/")
        project.delete "$rootDir/Carthage"
        project.delete "$rootDir/Cartfile.resolved"
    }
}

task syncVersion  {
    doLast() {
        ant.replaceregexp(
            file: "$rootDir/Cartfile",
            match: "\"urbanairship/ios-library\" == .*",
            replace: "\"urbanairship/ios-library\" == $airshipProperties.iosVersion"
        )
    }
}

task downloadFrameworks {
    doLast() {
        def path = new File("${rootDir}/frameworks/Airship.zip")

        if ( !path.exists() ) {
            def url = new URL("https://github.com/urbanairship/ios-library/releases/download/${airshipProperties.iosVersion}/Airship.zip")
            HttpURLConnection huc = (HttpURLConnection) url.openConnection()
            huc.setRequestMethod("GET")
            huc.connect();
            if (huc.getResponseCode() / 100 != 2) {
                println("Issue downloading version ${airshipProperties.ios}")
            } else {
                url.withInputStream{
                    i -> path.withOutputStream{ it << i }
                }

                exec {
                    workingDir "${rootDir}/frameworks"
                    executable "unzip"
                    args "-u", "Airship.zip"
                }
            }
        }
    }
}

task carthageCheckout {
    dependsOn 'syncVersion'
    doLast() {
        exec {
            workingDir "$rootDir"
            commandLine "carthage", "update", "--no-build"
        }
    }
}

task build {
    dependsOn 'downloadFrameworks'
}
