ext {
    pod = 'UrbanAirship-iOS-SDK'
    tempBindingsFolder = new File("$buildDir/bindings")
}

task clean(type: Delete) {
    doLast() {
        project.delete "bin"
        project.delete "obj"
        project.delete "$buildDir"
        project.delete "$rootDir/Carthage"
    }
}

task syncVersion  {
    doLast() {
        ant.replaceregexp(
            file: "$rootDir/Cartfile",
            match: "\"urbanairship/ios-library\" == .*",
            replace: "\"urbanairship/ios-library\" == $airshipProperties.iosVersion"
        )
    }
}

task carthageUpdate {
    doLast() {
        exec {
            workingDir "$rootDir"
            commandLine "carthage", "update"
        }

        exec {
            commandLine "strip", "-S", "-x", "../../Carthage/Build/iOS/AirshipKit.framework/AirshipKit"
        }
    }
}

task build {
    def BuildConfiguration=project.properties['build_configuration'] ?: "Release"
    doLast() {
        exec {
            commandLine "mono", "$nugetExe", "restore", "AirshipBindings.iOS.sln"
        }

        exec {
            commandLine "${msbuild}", "/t:build", "/p:Configuration=${BuildConfiguration}", "AirshipBindings.iOS.sln"
        }
    }
}

build.dependsOn('carthageUpdate')
carthageUpdate.dependsOn('syncVersion')

task generateBindings {
    doLast() {
        if (!tempBindingsFolder.exists()) {
            tempBindingsFolder.mkdirs()
        }

        exec {
            workingDir "$tempBindingsFolder"
            commandLine "sharpie", "bind", "-framework", "$rootDir/Carthage/Build/iOS/AirshipKit.framework"
        }
    }
}
generateBindings.dependsOn('carthageUpdate')
